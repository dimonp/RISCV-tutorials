## Инструкция по использованию инструментов RISC-V Dev Container

### Содержание

1. **Основные инструменты сборки**
2. **Работа с задачами (tasks.json)**
3. **Отладка программ**
4. **Работа с ассемблерным кодом**
5. **Запуск через QEMU**
6. **Очистка проекта**

---

### 1. Основные инструменты сборки

В контейнере доступны следующие инструменты:

* **GCC** для компиляции C программ
* **G++** для компиляции C++ программ
* **Assembler** для работы с ассемблерным кодом
* **QEMU** для эмуляции RISC-V программ
* **GDB** для отладки

---

### 2. Работа с задачами (tasks.json)

#### Сборка программ

* **Сборка C программы:**
  * Нажмите `Ctrl+Shift+B`
  * Выберите задачу "Build RISC-V C Program"
  * Команда выполнится автоматически

* **Сборка C++ программы:**
  * Выберите задачу "Build RISC-V C++ Program"
  * Программа скомпилируется с помощью G++

* **Сборка ассемблерного кода:**
  * Используйте задачу "Build RISC-V Assembly Program"
  * Код будет собран и линкуется автоматически

---

### 3. Отладка программ

Для отладки используйте панель **Run and Debug**:

1. Откройте файл с исходным кодом
2. Установите точки останова (breakpoints)
3. Выберите конфигурацию отладки "RISC-V GDB Remote"
4. Нажмите кнопку запуска (зеленая стрелка)

---

### 4. Работа с ассемблерным кодом

* **Создание файла:**
  * Создайте файл с расширением `.s`
  * VS Code автоматически определит синтаксис RISC-V

* **Форматирование:**
  * Настройки форматирования включены по умолчанию
  * Tab = 4 пробела
  * Автоматическое форматирование при сохранении

---

### 5. Запуск через QEMU

Для запуска программы через эмулятор:

1. Соберите программу (шаг 2)
2. Выберите задачу "Run with QEMU"
3. Программа запустится в эмуляторе с поддержкой отладки

Параметры запуска QEMU:
* `-semihosting` - поддержка хостинга
* `-g 5005` - порт для отладки

---

### 6. Очистка проекта

Для очистки скомпилированных файлов:
* Выберите задачу "Clean Build"
* Все временные файлы будут удалены

---

### Полезные команды

* **Сборка и запуск:**
  ```bash
  Ctrl+Shift+B -> Build RISC-V Program
  ```

* **Запуск QEMU:**
  ```bash
  Run QEMU -> Start Debugging
  ```

* **Очистка:**
  ```bash
  Clean Build
  ```

---

### Рекомендации

* Сохраняйте исходные файлы в рабочей директории `/workspace`
* Используйте систему контроля версий Git
* Регулярно проверяйте наличие ошибок в консоли сборки
* При отладке используйте точки останова и watch-выражения

---

### Устранение проблем

* Если сборка не работает:
  * Проверьте путь к компилятору в настройках
  * Убедитесь, что файл сохранен
  * Проверьте права доступа

* При проблемах с отладкой:
  * Перезапустите контейнер
  * Проверьте настройки GDB
  * Убедитесь, что QEMU запущен корректно
